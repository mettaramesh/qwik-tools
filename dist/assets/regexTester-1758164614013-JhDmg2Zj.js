async function x(n){const s=await fetch("regexTester.html").then(o=>o.text());n.innerHTML=s}function p(){const n=document.getElementById("regex-pattern"),s=document.getElementById("regex-test"),o=document.getElementById("regex-matches"),d=document.getElementById("regex-status"),g=document.getElementById("flag-g"),r=document.getElementById("flag-i"),u=document.getElementById("flag-m");n.value="\\b\\w{4}\\b",s.value="This tool finds four word test cases like code, tool, and more.";const c=()=>{const h=n.value,m=s.value;if(!h){o.value="",d.classList.add("hidden");return}try{let a="";g.checked&&(a+="g"),r.checked&&(a+="i"),u.checked&&(a+="m");const f=new RegExp(h,a),l=[];if(g.checked){let e,t=0;for(;(e=f.exec(m))!==null&&t<100;){if(l.push(`Match ${t+1}: "${e[0]}" at position ${e.index}`),e.length>1)for(let i=1;i<e.length;i++)l.push(`  Group ${i}: "${e[i]}"`);t++}}else{const e=f.exec(m);if(e&&(l.push(`Match 1: "${e[0]}" at position ${e.index}`),e.length>1))for(let t=1;t<e.length;t++)l.push(`  Group ${t}: "${e[t]}"`)}o.value=l.join(`
`),d.classList.add("hidden")}catch(a){d.textContent=`Error: ${a.message}`,d.classList.remove("hidden"),o.value=""}};n.addEventListener("input",c),s.addEventListener("input",c),g.addEventListener("change",c),r.addEventListener("change",c),u.addEventListener("change",c),c()}function E(n,s){x(n)}export{E as load,x as loadRegexTester,p as setupRegexTester};
