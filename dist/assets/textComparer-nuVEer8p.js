async function we(f,ke){try{const e=await fetch("/textComparer.html");if(!e.ok)throw new Error(`Failed to load Text Comparer HTML: ${e.status}`);const r=await e.text();if(r.includes("<!DOCTYPE html")||r.includes("<html"))throw new Error("Invalid HTML content - contains full page structure");if(f.innerHTML=r,!document.querySelector('link[href*="textComparer.css"]')){const t=document.createElement("link");t.rel="stylesheet",t.href="/textComparer.css",document.head.appendChild(t)}}catch(e){console.error("Error loading Text Comparer:",e),f.innerHTML='<div class="error">Failed to load Text Comparer tool</div>';return}await new Promise(e=>setTimeout(e,10));const c=f.querySelector("#tc-text1"),a=f.querySelector("#tc-text2"),m=f.querySelector("#gutter-left"),g=f.querySelector("#gutter-right"),J=f.querySelector("#tc-compare"),V=f.querySelector("#tc-clear"),$=f.querySelector("#tc-copy"),H=f.querySelector("#tc-copy-diff-only"),A=f.querySelector("#tc-copy-left"),R=f.querySelector("#tc-copy-right"),G=f.querySelector("#tc-paste-left"),K=f.querySelector("#tc-paste-right"),y=f.querySelector("#tc-result"),M=f.querySelector("#tc-status"),E=f.querySelector("#tc-similarity"),he=f.querySelector("#tc-result-meta"),b=f.querySelector("#tc-search"),U=f.querySelector("#tc-search-prev"),Y=f.querySelector("#tc-search-next"),Q=f.querySelector("#tc-word-level"),Z=f.querySelector("#tc-ignore-ws"),_=f.querySelector("#tc-ignore-case"),ee=f.querySelector("#tc-show-lines"),q=f.querySelector("#splitter"),te=f.querySelector("#tc-main"),O=f.querySelector("#left-wrap"),re=f.querySelector("#right-wrap");if(!c||!a||!y||!M){console.error("Text Comparer: Missing essential DOM elements"),console.error("Debug info:",{"t1 (tc-text1)":!!c,"t2 (tc-text2)":!!a,"resultEl (tc-result)":!!y,"statusEl (tc-status)":!!M,containerHTML:f.innerHTML.length+" chars",containerChildrenCount:f.children.length}),f.innerHTML='<div class="error">Failed to initialize Text Comparer - missing elements</div>';return}function h(e,r=!0){M.textContent=e,M.classList.remove("status-ok","status-error"),M.classList.add(r?"status-ok":"status-error")}function D(e){he.textContent=e||""}function v(e){return String(e).replace(/[&<>]/g,r=>({"&":"&amp;","<":"&lt;",">":"&gt;"})[r])}function me(e){return String(e).replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function B(e){const r=window.getComputedStyle(e);let t=parseFloat(r.lineHeight);if(isNaN(t)||r.lineHeight==="normal"){const n=parseFloat(r.fontSize)||13;t=Math.round(n*1.45)}return Math.round(t)}function ne(e,r,t){const n=e.children.length;if(n>r)for(let i=n-1;i>=r;i--)e.removeChild(e.children[i]);else if(n<r){const i=document.createDocumentFragment();for(let l=n;l<r;l++){const s=document.createElement("div");s.className="ln",i.appendChild(s)}e.appendChild(i)}for(let i=0;i<r;i++){const l=e.children[i],s=String(i+1);l.textContent!==s&&(l.textContent=s),l.style.height=t+"px",l.style.lineHeight=t+"px"}}function k(){const e=Math.max(1,c.value.split(`
`).length),r=Math.max(1,a.value.split(`
`).length),t=B(c),n=B(a);ne(m,e,t),ne(g,r,n),ee.checked?(m.classList.remove("hidden"),g.classList.remove("hidden")):(m.classList.add("hidden"),g.classList.add("hidden"))}function se(e,r){if(r<=0)return 0;let t=0;for(let n=0;n<r;n++){const i=e.indexOf(`
`,t);if(i===-1){t=e.length;break}t=i+1}return t}function ie(e,r){return r.wordLevel?e.split(/(\s+|\b)/).map(t=>t===void 0?"":t):e.split("")}function le(e,r){let t=String(e);return r.ignoreWs&&(t=t.replace(/\s+/g,"")),r.ignoreCase&&(t=t.toLowerCase()),t}function ge(e,r,t){const n=e.length,i=r.length,l=Array(n+1).fill(null).map(()=>Array(i+1).fill(0));for(let s=n-1;s>=0;s--)for(let o=i-1;o>=0;o--)l[s][o]=t(e[s],r[o])?1+l[s+1][o+1]:Math.max(l[s+1][o],l[s][o+1]);return l}function oe(e,r,t){const n=ie(e,t),i=ie(r,t),l=(p,L)=>le(p,t)===le(L,t),s=ge(n,i,l);let o=0,u=0,d="";for(;o<n.length||u<i.length;)o<n.length&&u<i.length&&l(n[o],i[u])?(d+=v(String(i[u])),o++,u++):u<i.length&&(o===n.length||s[o][u+1]>=s[o+1][u])?(d+=`<span class="diff-add">${v(String(i[u]))}</span>`,u++):o<n.length&&(u===i.length||s[o][u+1]<s[o+1][u])?(d+=`<span class="diff-del">${v(String(n[o]))}</span>`,o++):(o<n.length&&(d+=`<span class="diff-del">${v(String(n[o]))}</span>`,o++),u<i.length&&(d+=`<span class="diff-add">${v(String(i[u]))}</span>`,u++));return d}function ce(e){if(!e||!e.trim())return null;const r=e.trim();if(r.startsWith("{")&&r.endsWith("}")||r.startsWith("[")&&r.endsWith("]"))try{return JSON.stringify(JSON.parse(r),null,2)}catch{}if(r.startsWith("<"))try{const n=new DOMParser().parseFromString(r,"application/xml");if(!n.querySelector("parsererror"))return ve(n)}catch{}return null}function ve(e){function r(t,n=""){if(t.nodeType===3){const u=t.nodeValue.trim();return u?n+v(u)+`
`:""}if(t.nodeType===8)return n+"<!--"+v(t.nodeValue)+`-->
`;if(t.nodeType!==1)return"";const i=t.nodeName;let l="";if(t.attributes&&t.attributes.length)for(let u=0;u<t.attributes.length;u++){const d=t.attributes[u];l+=` ${d.name}="${v(d.value)}"`}const s=Array.from(t.childNodes||[]);if(!s.length)return n+`<${i}${l}/>
`;const o=s.map(u=>r(u,n+"  ")).join("");return n+`<${i}${l}>
`+o+n+`</${i}>
`}return Array.from(e.childNodes).map(t=>r(t,"")).join("")}function ye(e,r,t){const n=e.length,i=r.length;if(n===0||i===0)return{dp:[],n,m:i};const l=Array(n+1).fill(null).map(()=>Array(i+1).fill(0));for(let s=n-1;s>=0;s--)for(let o=i-1;o>=0;o--)l[s][o]=t(e[s],r[o])?1+l[s+1][o+1]:Math.max(l[s+1][o],l[s][o+1]);return{dp:l,n,m:i}}function Te(e,r,t={}){const n=ce(e)||e,i=ce(r)||r,l=n.split(`
`),s=i.split(`
`),o=(C,X)=>{if(!t.ignoreWs&&!t.ignoreCase)return C===X;const ue=t.ignoreWs?C.replace(/\s+/g,""):C,pe=t.ignoreWs?X.replace(/\s+/g,""):X;return t.ignoreCase?ue.toLowerCase()===pe.toLowerCase():ue===pe},{dp:u}=ye(l,s,o);let d=0,p=0,L="";for(;d<l.length||p<s.length;)if(d<l.length&&p<s.length&&o(l[d],s[p]))L+=`<div class="diff-line">${v(l[d])}</div>`,d++,p++;else if(p<s.length&&(d===l.length||u[d][p+1]>=u[d+1][p]))if(t.wordLevel&&d<l.length){const C=oe(l[d],s[p],t);L+=`<div class="diff-line">${C}</div>`,d++,p++}else L+=`<div class="diff-line"><span class="diff-add">${v(s[p])}</span></div>`,p++;else if(d<l.length&&(p===s.length||u[d][p+1]<u[d+1][p]))if(t.wordLevel&&p<s.length){const C=oe(l[d],s[p],t);L+=`<div class="diff-line">${C}</div>`,d++,p++}else L+=`<div class="diff-line"><span class="diff-del">${v(l[d])}</span></div>`,d++;else d<l.length&&(L+=`<div class="diff-line"><span class="diff-del">${v(l[d])}</span></div>`,d++),p<s.length&&(L+=`<div class="diff-line"><span class="diff-add">${v(s[p])}</span></div>`,p++);return{html:L,leftFormatted:n,rightFormatted:i}}function Le(e,r){const t=e.replace(/\s+/g,""),n=r.replace(/\s+/g,"");if(!t&&!n)return 100;const i=Math.min(t.length,n.length);let l=0;for(let s=0;s<i;s++)t[s]===n[s]&&l++;return Math.round(l/Math.max(t.length,n.length)*100)}let F=null,I=!1;function w(e=140){F&&clearTimeout(F),F=setTimeout(()=>{I||(I=!0,requestAnimationFrame(()=>{j(),I=!1})),F=null},e)}let x=null,ae=0,P=null;function xe(){try{const e=new Worker("diff.worker.js");return h("Worker enabled"),e}catch{return h("Worker unavailable, using main thread",!1),null}}function de(){if(x){try{x.terminate()}catch{}x=null}}function Se(e,r,t,n,i){if(x||(x=xe()),!x){i&&i("Worker unavailable");return}ae++;const l=ae;x.postMessage({id:l,type:"compute",left:e,right:r,opts:t}),P=setTimeout(()=>{de(),h("Worker timeout, using main thread",!1),i&&i("Worker timeout")},6e3),x.onmessage=s=>{!s.data||s.data.id!==l||(clearTimeout(P),s.data.type==="done"?n&&n(s.data.html,s.data.similarity,s.data.meta):s.data.type==="error"&&i&&i(s.data.message))},x.onerror=s=>{clearTimeout(P),de(),h("Worker error, using main thread",!1),i&&i("Worker error")}}function j(e=!1){h("Computing diff...");const r=c.value,t=a.value,n={wordLevel:Q.checked,ignoreWs:Z.checked,ignoreCase:_.checked};Se(r,t,n,(i,l,s)=>{y.innerHTML=i||'<div class="tc-no-diff">No differences</div>',E.textContent=l?`Similarity: ${l}%`:"",D(s||""),h("Ready (worker)"),N()},i=>{const{html:l}=Te(r,t,n);y.innerHTML=l||'<div class="tc-no-diff">No differences</div>',E.textContent=`Similarity: ${Le(r,t)}%`,D(""),h("Ready (main thread)",!1),N()})}[Q,Z,_,ee].filter(Boolean).forEach(e=>{e&&e.addEventListener("change",()=>{k(),w(60)})}),J&&J.addEventListener("click",()=>j(!0)),b&&b.addEventListener("input",()=>w(80)),$&&$.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(y.innerText||""),h("Result copied to clipboard"),$.classList.add("tc-success"),setTimeout(()=>$.classList.remove("tc-success"),300)}catch{h("Copy failed",!1)}}),H&&H.addEventListener("click",async()=>{try{const e=y.querySelectorAll(".diff-added, .diff-removed, .diff-modified"),r=Array.from(e).map(t=>t.textContent).join(`
`);await navigator.clipboard.writeText(r||"No differences found"),h("Differences copied to clipboard"),H.classList.add("tc-success"),setTimeout(()=>H.classList.remove("tc-success"),300)}catch{h("Copy failed",!1)}}),A&&A.addEventListener("click",async()=>{try{await navigator.clipboard.writeText((c==null?void 0:c.value)||""),h("Original text copied to clipboard"),A.classList.add("tc-success"),setTimeout(()=>A.classList.remove("tc-success"),300)}catch{h("Copy failed",!1)}}),R&&R.addEventListener("click",async()=>{try{await navigator.clipboard.writeText((a==null?void 0:a.value)||""),h("Modified text copied to clipboard"),R.classList.add("tc-success"),setTimeout(()=>R.classList.remove("tc-success"),300)}catch{h("Copy failed",!1)}}),G&&G.addEventListener("click",async()=>{try{const e=await navigator.clipboard.readText();c&&(c.value=e,k(),w(),h("Text pasted to original side"))}catch{h("Paste failed - check clipboard permissions",!1)}}),K&&K.addEventListener("click",async()=>{try{const e=await navigator.clipboard.readText();a&&(a.value=e,k(),w(),h("Text pasted to modified side"))}catch{h("Paste failed - check clipboard permissions",!1)}}),V&&V.addEventListener("click",()=>{c&&(c.value=""),a&&(a.value=""),y&&(y.innerHTML=""),k(),h("Cleared"),E&&(E.textContent=""),D(""),N()}),[c,a].filter(Boolean).forEach(e=>{e&&(e.addEventListener("input",()=>{k(),w()}),e.addEventListener("paste",()=>{setTimeout(()=>{k(),w()},20)}),e.addEventListener("keydown",r=>{(navigator.platform.toLowerCase().includes("mac")?r.metaKey:r.ctrlKey)&&r.key==="Enter"&&(r.preventDefault(),j(!0))}))}),c&&a&&!c.value&&!a.value?(c.value=`The quick brown fox
jumps over the lazy dog.
This is the left file.
It has several lines.
Some lines will be changed.`,a.value=`The quick brown fox
jumps over the lazy dog!
This is the right file.
It has several lines.
Some lines will be added.
And some will be removed.`,k(),w(20)):(k(),w(20)),function(){if(!q||!O||!re||!te)return;let r=0,t=0;q.addEventListener("pointerdown",n=>{n.preventDefault(),r=n.clientX,t=O.getBoundingClientRect().width,q.setPointerCapture(n.pointerId);function i(s){const o=s.clientX-r,u=te.clientWidth;let d=Math.max(200,Math.min(u-200,t+o));O.style.flex=`0 0 ${d}px`,re.style.flex=`0 0 ${Math.max(200,u-d-q.offsetWidth)}px`}function l(s){q.releasePointerCapture(s.pointerId),document.removeEventListener("pointermove",i),document.removeEventListener("pointerup",l)}document.addEventListener("pointermove",i),document.addEventListener("pointerup",l)})}();function fe(){c.addEventListener("scroll",()=>{m.scrollTop=c.scrollTop,Math.abs(a.scrollTop-c.scrollTop)>1&&(a.scrollTop=c.scrollTop),g.scrollTop=c.scrollTop},{passive:!0}),a.addEventListener("scroll",()=>{g.scrollTop=a.scrollTop,Math.abs(c.scrollTop-a.scrollTop)>1&&(c.scrollTop=a.scrollTop),m.scrollTop=a.scrollTop},{passive:!0}),m.addEventListener("click",e=>{const r=e.target.closest(".ln");if(!r)return;const t=Array.prototype.indexOf.call(m.children,r);W(c,t)}),g.addEventListener("click",e=>{const r=e.target.closest(".ln");if(!r)return;const t=Array.prototype.indexOf.call(g.children,r);W(a,t)})}fe();function W(e,r){const t=se(e.value,r);e.focus(),e.setSelectionRange(t,t);const n=B(e);e.scrollTop=Math.max(0,r*n-e.clientHeight/2)}f.textComparer={update:j,getResultHtml:()=>y.innerHTML,getSimilarity:()=>E.textContent},h("Ready — checkboxes now applied to diff");let T=[],S=0;function N(){const e=(b.value||"").trim();let r=y.innerHTML;if(!e){y.innerHTML=r.replace(/<span class="diff-chg">(.*?)<\/span>/g,"$1"),T=[],S=0;return}r=r.replace(/<span class="diff-chg">(.*?)<\/span>/g,"$1");const t=new RegExp(me(e),"gi");let n=0;r=r.replace(t,i=>(n++,`<span class="diff-chg" data-match-idx="${n-1}">${v(i)}</span>`)),y.innerHTML=r,T=Array.from(y.querySelectorAll(".diff-chg")),S=0,z()}function z(){if(!T.length)return;T.forEach((r,t)=>{r.style.outline=t===S?"2px solid #2563eb":"",r.style.background=t===S?"#fff4ce":""});const e=T[S];e&&e.scrollIntoView({behavior:"smooth",block:"center"})}b&&b.addEventListener("input",()=>{N()}),U&&U.addEventListener("click",()=>{T.length&&(S=(S-1+T.length)%T.length,z())}),Y&&Y.addEventListener("click",()=>{T.length&&(S=(S+1)%T.length,z())})}export{we as load};
