async function g(t){try{const e=await fetch("timestampConverter.html");if(!e.ok)throw new Error(`Failed to load Timestamp Converter HTML: ${e.status}`);const o=await e.text();if(o.includes("<!DOCTYPE html")||o.includes("<html"))throw new Error("Invalid HTML content - contains full page structure");t.innerHTML=o}catch(e){console.error("Error loading Timestamp Converter:",e),t.innerHTML='<div class="error">Failed to load Timestamp Converter tool</div>';return}}function C(){const t=document.getElementById("timestamp-input"),e=document.getElementById("datetime-input"),o=document.getElementById("unix-seconds"),a=document.getElementById("unix-milliseconds"),r=document.getElementById("iso-date"),s=document.getElementById("utc-date"),c=document.getElementById("local-date"),m=()=>{if(!t)return;const n=parseInt(t.value);if(!n)return;const i=new Date(n*1e3);o&&(o.textContent=n),a&&(a.textContent=n*1e3),r&&(r.textContent=i.toISOString()),s&&(s.textContent=i.toUTCString()),c&&(c.textContent=i.toString()),e&&(e.value=i.toISOString().slice(0,16))},f=()=>{if(!e)return;const n=e.value;if(!n)return;const i=new Date(n),v=Math.floor(i.getTime()/1e3);t&&(t.value=v),m()},l=n=>{n&&(n.preventDefault(),n.stopPropagation());const i=Math.floor(Date.now()/1e3);t&&(t.value=i),m()},p=n=>{n&&(n.preventDefault(),n.stopPropagation()),t&&(t.value=""),e&&(e.value=""),o&&(o.textContent="-"),a&&(a.textContent="-"),r&&(r.textContent="-"),s&&(s.textContent="-"),c&&(c.textContent="-")};t&&t.addEventListener("input",m),e&&e.addEventListener("input",f);const d=document.getElementById("timestamp-now-btn"),u=document.getElementById("timestamp-clear-btn");d&&d.addEventListener("click",l),u&&u.addEventListener("click",p),l()}async function E(t,e){await g(t),C()}export{E as load,g as loadTimestampConverter,C as setupTimestampConverter};
