async function Le(d){const ne=await(await fetch("textComparer.html")).text();d.innerHTML=ne;const f=d.querySelector("#tc-text1"),u=d.querySelector("#tc-text2"),g=d.querySelector("#gutter-left"),m=d.querySelector("#gutter-right"),re=d.querySelector("#tc-compare"),le=d.querySelector("#tc-clear"),se=d.querySelector("#tc-copy"),L=d.querySelector("#tc-result"),B=d.querySelector("#tc-status"),W=d.querySelector("#tc-similarity"),ie=d.querySelector("#tc-result-meta"),A=d.querySelector("#tc-search"),oe=d.querySelector("#tc-search-prev"),ce=d.querySelector("#tc-search-next"),I=d.querySelector("#tc-word-level"),D=d.querySelector("#tc-ignore-ws"),z=d.querySelector("#tc-ignore-case"),P=d.querySelector("#tc-show-lines"),q=d.querySelector("#splitter"),ae=d.querySelector("#tc-main"),X=d.querySelector("#left-wrap"),de=d.querySelector("#right-wrap");function v(n,t=!0){B.textContent=n,B.style.color=t?"var(--muted)":"var(--danger)"}function R(n){ie.textContent=n||""}function p(n){return String(n).replace(/[&<>]/g,t=>({"&":"&amp;","<":"&lt;",">":"&gt;"})[t])}function fe(n){return String(n).replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function $(n){const t=window.getComputedStyle(n);let e=parseFloat(t.lineHeight);if(isNaN(e)||t.lineHeight==="normal"){const r=parseFloat(t.fontSize)||13;e=Math.round(r*1.45)}return Math.round(e)}function J(n,t,e){const r=n.children.length;if(r>t)for(let s=r-1;s>=t;s--)n.removeChild(n.children[s]);else if(r<t){const s=document.createDocumentFragment();for(let i=r;i<t;i++){const l=document.createElement("div");l.className="ln",s.appendChild(l)}n.appendChild(s)}for(let s=0;s<t;s++){const i=n.children[s],l=String(s+1);i.textContent!==l&&(i.textContent=l),i.style.height=e+"px",i.style.lineHeight=e+"px"}}function w(){const n=Math.max(1,f.value.split(`
`).length),t=Math.max(1,u.value.split(`
`).length),e=$(f),r=$(u);J(g,n,e),J(m,t,r),P.checked?(g.classList.remove("hidden"),m.classList.remove("hidden")):(g.classList.add("hidden"),m.classList.add("hidden"))}function V(n,t){if(t<=0)return 0;let e=0;for(let r=0;r<t;r++){const s=n.indexOf(`
`,e);if(s===-1){e=n.length;break}e=s+1}return e}function G(n,t){return t.wordLevel?n.split(/(\s+|\b)/).map(e=>e===void 0?"":e):n.split("")}function K(n,t){let e=String(n);return t.ignoreWs&&(e=e.replace(/\s+/g,"")),t.ignoreCase&&(e=e.toLowerCase()),e}function ue(n,t,e){const r=n.length,s=t.length,i=Array(r+1).fill(null).map(()=>Array(s+1).fill(0));for(let l=r-1;l>=0;l--)for(let o=s-1;o>=0;o--)i[l][o]=e(n[l],t[o])?1+i[l+1][o+1]:Math.max(i[l+1][o],i[l][o+1]);return i}function U(n,t,e){const r=G(n,e),s=G(t,e),i=(h,T)=>K(h,e)===K(T,e),l=ue(r,s,i);let o=0,a=0,c="";for(;o<r.length||a<s.length;)o<r.length&&a<s.length&&i(r[o],s[a])?(c+=p(String(s[a])),o++,a++):a<s.length&&(o===r.length||l[o][a+1]>=l[o+1][a])?(c+=`<span class="diff-add">${p(String(s[a]))}</span>`,a++):o<r.length&&(a===s.length||l[o][a+1]<l[o+1][a])?(c+=`<span class="diff-del">${p(String(r[o]))}</span>`,o++):(o<r.length&&(c+=`<span class="diff-del">${p(String(r[o]))}</span>`,o++),a<s.length&&(c+=`<span class="diff-add">${p(String(s[a]))}</span>`,a++));return c}function Q(n){if(!n||!n.trim())return null;const t=n.trim();if(t.startsWith("{")&&t.endsWith("}")||t.startsWith("[")&&t.endsWith("]"))try{return JSON.stringify(JSON.parse(t),null,2)}catch{}if(t.startsWith("<"))try{const r=new DOMParser().parseFromString(t,"application/xml");if(!r.querySelector("parsererror"))return he(r)}catch{}return null}function he(n){function t(e,r=""){if(e.nodeType===3){const a=e.nodeValue.trim();return a?r+p(a)+`
`:""}if(e.nodeType===8)return r+"<!--"+p(e.nodeValue)+`-->
`;if(e.nodeType!==1)return"";const s=e.nodeName;let i="";if(e.attributes&&e.attributes.length)for(let a=0;a<e.attributes.length;a++){const c=e.attributes[a];i+=` ${c.name}="${p(c.value)}"`}const l=Array.from(e.childNodes||[]);if(!l.length)return r+`<${s}${i}/>
`;const o=l.map(a=>t(a,r+"  ")).join("");return r+`<${s}${i}>
`+o+r+`</${s}>
`}return Array.from(n.childNodes).map(e=>t(e,"")).join("")}function pe(n,t,e){const r=n.length,s=t.length;if(r===0||s===0)return{dp:[],n:r,m:s};const i=Array(r+1).fill(null).map(()=>Array(s+1).fill(0));for(let l=r-1;l>=0;l--)for(let o=s-1;o>=0;o--)i[l][o]=e(n[l],t[o])?1+i[l+1][o+1]:Math.max(i[l+1][o],i[l][o+1]);return{dp:i,n:r,m:s}}function ge(n,t,e={}){const r=Q(n)||n,s=Q(t)||t,i=r.split(`
`),l=s.split(`
`),o=(k,O)=>{if(!e.ignoreWs&&!e.ignoreCase)return k===O;const ee=e.ignoreWs?k.replace(/\s+/g,""):k,te=e.ignoreWs?O.replace(/\s+/g,""):O;return e.ignoreCase?ee.toLowerCase()===te.toLowerCase():ee===te},{dp:a}=pe(i,l,o);let c=0,h=0,T="";for(;c<i.length||h<l.length;)if(c<i.length&&h<l.length&&o(i[c],l[h]))T+=`<div class="diff-line">${p(i[c])}</div>`,c++,h++;else if(h<l.length&&(c===i.length||a[c][h+1]>=a[c+1][h]))if(e.wordLevel&&c<i.length){const k=U(i[c],l[h],e);T+=`<div class="diff-line">${k}</div>`,c++,h++}else T+=`<div class="diff-line"><span class="diff-add">${p(l[h])}</span></div>`,h++;else if(c<i.length&&(h===l.length||a[c][h+1]<a[c+1][h]))if(e.wordLevel&&h<l.length){const k=U(i[c],l[h],e);T+=`<div class="diff-line">${k}</div>`,c++,h++}else T+=`<div class="diff-line"><span class="diff-del">${p(i[c])}</span></div>`,c++;else c<i.length&&(T+=`<div class="diff-line"><span class="diff-del">${p(i[c])}</span></div>`,c++),h<l.length&&(T+=`<div class="diff-line"><span class="diff-add">${p(l[h])}</span></div>`,h++);return{html:T,leftFormatted:r,rightFormatted:s}}function me(n,t){const e=n.replace(/\s+/g,""),r=t.replace(/\s+/g,"");if(!e&&!r)return 100;const s=Math.min(e.length,r.length);let i=0;for(let l=0;l<s;l++)e[l]===r[l]&&i++;return Math.round(i/Math.max(e.length,r.length)*100)}let b=null,j=!1;function C(n=140){b&&clearTimeout(b),b=setTimeout(()=>{j||(j=!0,requestAnimationFrame(()=>{E(),j=!1})),b=null},n)}let S=null,Y=0,F=null;function ve(){try{const n=new Worker("diff.worker.js");return v("Worker enabled"),n}catch{return v("Worker unavailable, using main thread",!1),null}}function Z(){if(S){try{S.terminate()}catch{}S=null}}function ye(n,t,e,r,s){if(S||(S=ve()),!S){s&&s("Worker unavailable");return}Y++;const i=Y;S.postMessage({id:i,type:"compute",left:n,right:t,opts:e}),F=setTimeout(()=>{Z(),v("Worker timeout, using main thread",!1),s&&s("Worker timeout")},6e3),S.onmessage=l=>{!l.data||l.data.id!==i||(clearTimeout(F),l.data.type==="done"?r&&r(l.data.html,l.data.similarity,l.data.meta):l.data.type==="error"&&s&&s(l.data.message))},S.onerror=l=>{clearTimeout(F),Z(),v("Worker error, using main thread",!1),s&&s("Worker error")}}function E(n=!1){v("Computing diff...");const t=f.value,e=u.value,r={wordLevel:I.checked,ignoreWs:D.checked,ignoreCase:z.checked};ye(t,e,r,(s,i,l)=>{L.innerHTML=s||'<div class="tc-no-diff">No differences</div>',W.textContent=i?`Similarity: ${i}%`:"",R(l||""),v("Ready (worker)"),H()},s=>{const{html:i}=ge(t,e,r);L.innerHTML=i||'<div class="tc-no-diff">No differences</div>',W.textContent=`Similarity: ${me(t,e)}%`,R(""),v("Ready (main thread)",!1),H()})}[I,D,z,P].forEach(n=>{n.addEventListener("change",()=>{w(),C(60)})}),re.addEventListener("click",()=>E(!0)),A.addEventListener("input",()=>C(80)),se.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(L.innerText||""),v("Result copied to clipboard")}catch{v("Copy failed",!1)}}),le.addEventListener("click",()=>{f.value="",u.value="",L.innerHTML="",w(),v("Cleared"),W.textContent="",R(""),H()}),[f,u].forEach(n=>{n.addEventListener("input",()=>{w(),C()}),n.addEventListener("paste",()=>{setTimeout(()=>{w(),C()},20)}),n.addEventListener("keydown",t=>{(navigator.platform.toLowerCase().includes("mac")?t.metaKey:t.ctrlKey)&&t.key.toLowerCase()==="b"&&(t.preventDefault(),E())})}),!f.value&&!u.value?(f.value=`The quick brown fox
jumps over the lazy dog.
This is the left file.
It has several lines.
Some lines will be changed.`,u.value=`The quick brown fox
jumps over the lazy dog!
This is the right file.
It has several lines.
Some lines will be added.
And some will be removed.`,w(),C(20)):(w(),C(20)),function(){let t=0,e=0;q.addEventListener("pointerdown",r=>{r.preventDefault(),t=r.clientX,e=X.getBoundingClientRect().width,q.setPointerCapture(r.pointerId);function s(l){const o=l.clientX-t,a=ae.clientWidth;let c=Math.max(200,Math.min(a-200,e+o));X.style.flex=`0 0 ${c}px`,de.style.flex=`0 0 ${Math.max(200,a-c-q.offsetWidth)}px`}function i(l){q.releasePointerCapture(l.pointerId),document.removeEventListener("pointermove",s),document.removeEventListener("pointerup",i)}document.addEventListener("pointermove",s),document.addEventListener("pointerup",i)})}();function _(){f.addEventListener("scroll",()=>{g.scrollTop=f.scrollTop,Math.abs(u.scrollTop-f.scrollTop)>1&&(u.scrollTop=f.scrollTop),m.scrollTop=f.scrollTop},{passive:!0}),u.addEventListener("scroll",()=>{m.scrollTop=u.scrollTop,Math.abs(f.scrollTop-u.scrollTop)>1&&(f.scrollTop=u.scrollTop),g.scrollTop=u.scrollTop},{passive:!0}),g.addEventListener("click",n=>{const t=n.target.closest(".ln");if(!t)return;const e=Array.prototype.indexOf.call(g.children,t);M(f,e)}),m.addEventListener("click",n=>{const t=n.target.closest(".ln");if(!t)return;const e=Array.prototype.indexOf.call(m.children,t);M(u,e)})}_();function M(n,t){const e=V(n.value,t);n.focus(),n.setSelectionRange(e,e);const r=$(n);n.scrollTop=Math.max(0,t*r-n.clientHeight/2)}d.textComparer={update:E,getResultHtml:()=>L.innerHTML,getSimilarity:()=>W.textContent},v("Ready â€” checkboxes now applied to diff");let y=[],x=0;function H(){const n=(A.value||"").trim();let t=L.innerHTML;if(!n){L.innerHTML=t.replace(/<span class="diff-chg">(.*?)<\/span>/g,"$1"),y=[],x=0;return}t=t.replace(/<span class="diff-chg">(.*?)<\/span>/g,"$1");const e=new RegExp(fe(n),"gi");let r=0;t=t.replace(e,s=>(r++,`<span class="diff-chg" data-match-idx="${r-1}">${p(s)}</span>`)),L.innerHTML=t,y=Array.from(L.querySelectorAll(".diff-chg")),x=0,N()}function N(){if(!y.length)return;y.forEach((t,e)=>{t.style.outline=e===x?"2px solid #2563eb":"",t.style.background=e===x?"#fff4ce":""});const n=y[x];n&&n.scrollIntoView({behavior:"smooth",block:"center"})}A.addEventListener("input",()=>{H()}),oe.addEventListener("click",()=>{y.length&&(x=(x-1+y.length)%y.length,N())}),ce.addEventListener("click",()=>{y.length&&(x=(x+1)%y.length,N())})}export{Le as load};
