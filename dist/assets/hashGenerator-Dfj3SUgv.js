import{a as m}from"./utils-DuYpMu2P.js";window.simpleMD5=m;async function h(t){const n=await fetch("src/hashGenerator.html").then(o=>o.text());t.innerHTML=n}function l(){const t=document.getElementById("hash-input"),n=document.getElementById("md5-output"),o=document.getElementById("sha1-output"),u=document.getElementById("sha256-output"),i=document.getElementById("sha512-output"),c=async()=>{const a=t.value;if(!a)return;const s=new TextEncoder().encode(a);try{const r=await crypto.subtle.digest("SHA-1",s),d=await crypto.subtle.digest("SHA-256",s),p=await crypto.subtle.digest("SHA-512",s);o.value=Array.from(new Uint8Array(r)).map(e=>e.toString(16).padStart(2,"0")).join(""),u.value=Array.from(new Uint8Array(d)).map(e=>e.toString(16).padStart(2,"0")).join(""),i.value=Array.from(new Uint8Array(p)).map(e=>e.toString(16).padStart(2,"0")).join(""),n.value=typeof window.simpleMD5=="function"?window.simpleMD5(a):""}catch(r){console.error("Hash generation failed:",r)}};t&&t.addEventListener("input",c),typeof window.setupCopyButtons=="function"&&window.setupCopyButtons()}function f(t,n){h(t),l()}export{f as load,h as loadHashGenerator,l as setupHashGenerator};
