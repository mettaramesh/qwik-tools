async function Oe(o){try{const S=await fetch("jwtTool.html").then(d=>d.text());o.innerHTML=S}catch(S){console.error("Failed to load JWT tool HTML:",S),o.innerHTML='<div class="error">Failed to load JWT tool</div>'}}function Re(){const o=e=>document.getElementById(e),S=o("jwt-input"),d=o("jwt-header"),p=o("jwt-payload"),E=o("jwt-signature"),y=o("jwt-secret"),J=o("jwt-pubkey"),C=o("jwt-jwks"),T=o("jwks-note"),$=o("jwt-status"),ce=o("jwt-hints"),j=o("hdr-size"),D=o("pld-size"),Z=o("jwt-skew"),q=o("jwt-claims-mode"),ue=o("jwt-auto"),fe=o("gen-sub"),de=o("gen-name"),pe=o("gen-ttl"),ye=o("gen-iat"),ge=o("gen-extra"),ve=o("gen-button"),V=o("gen-note"),Se=o("kp-alg"),he=o("kp-ttl"),me=o("kp-sub"),we=o("kp-name"),ke=o("kp-generate"),P=o("kp-mint"),Q=o("kp-note"),I=o("kp-pub"),X=o("kp-priv"),U={iat:{local:o("hr-iat-local"),utc:o("hr-iat-utc"),rel:o("hr-iat-rel")},nbf:{local:o("hr-nbf-local"),utc:o("hr-nbf-utc"),rel:o("hr-nbf-rel")},exp:{local:o("hr-exp-local"),utc:o("hr-exp-utc"),rel:o("hr-exp-rel")}};let m={alg:null,privateKey:null,publicKey:null},g={keysByKid:new Map,list:[],parsed:!1};const b=new TextEncoder,be=new TextDecoder;function B(e){let t="";for(let n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}function M(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");for(;t.length%4;)t+="=";const n=atob(t),r=new Uint8Array(n.length);for(let s=0;s<n.length;s++)r[s]=n.charCodeAt(s);return r}function x(e){return B(b.encode(JSON.stringify(e)))}function ee(e){return JSON.parse(be.decode(M(e)))}function O(e){return/^[A-Za-z0-9_-]+$/.test(e)&&e.length>0}function te(e){for(let t=0;t<e.length;t++)if(e.charCodeAt(t)>127)return!0;return!1}async function ne(e){return crypto.subtle.importKey("raw",b.encode(e),{name:"HMAC",hash:"SHA-256"},!1,["sign","verify"])}async function re(e,t){const n=await ne(t),r=await crypto.subtle.sign("HMAC",n,b.encode(e));return B(new Uint8Array(r))}async function Ee(e,t,n){const r=await ne(n);return crypto.subtle.verify("HMAC",r,M(t),b.encode(e))}async function Ke(e,t){if(e.trim().startsWith("{")){const r=JSON.parse(e);return oe(r,t)}else{const s=e.replace(/\r/g,"").trim().match(/-----BEGIN PUBLIC KEY-----([A-Za-z0-9+/=\n]+)-----END PUBLIC KEY-----/);if(!s)throw new Error("PEM must be SPKI with BEGIN PUBLIC KEY / END PUBLIC KEY");const u=Uint8Array.from(atob(s[1].replace(/\s+/g,"")),l=>l.charCodeAt(0));if(t==="RS256")return crypto.subtle.importKey("spki",u.buffer,{name:"RSASSA-PKCS1-v1_5",hash:"SHA-256"},!1,["verify"]);if(t==="ES256")return crypto.subtle.importKey("spki",u.buffer,{name:"ECDSA",namedCurve:"P-256"},!1,["verify"]);throw new Error(`Unsupported alg for PEM: ${t}`)}}async function oe(e,t){if(t==="RS256"){if(e.kty!=="RSA")throw new Error("JWK kty must be RSA for RS256");return crypto.subtle.importKey("jwk",e,{name:"RSASSA-PKCS1-v1_5",hash:"SHA-256"},!1,["verify"])}else if(t==="ES256"){if(e.kty!=="EC"||e.crv!=="P-256")throw new Error("JWK must be EC P-256 for ES256");return crypto.subtle.importKey("jwk",e,{name:"ECDSA",namedCurve:"P-256"},!1,["verify"])}throw new Error(`Unsupported alg for JWK: ${t}`)}function Ce(e){const t=e.slice(0,32),n=e.slice(32,64);function r(i){let a=0;for(;a<i.length-1&&i[a]===0;)a++;return i.slice(a)}function s(i){let a=r(i);return a[0]&128&&(a=Uint8Array.from([0,...a])),Uint8Array.from([2,a.length,...a])}const u=s(t),l=s(n),c=u.length+l.length;return Uint8Array.from([48,c,...u,...l])}function xe(e){let t=0;if(e[t++]!==48)throw new Error("Bad DER");if(t++,e[t++]!==2)throw new Error("Bad DER r");const n=e[t++],r=e.slice(t,t+n);if(t+=n,e[t++]!==2)throw new Error("Bad DER s");const s=e[t++],u=e.slice(t,t+s);function l(h){const v=new Uint8Array(32);return v.set(h,32-h.length),v}const c=l(r[0]===0?r.slice(1):r),i=l(u[0]===0?u.slice(1):u),a=new Uint8Array(64);return a.set(c,0),a.set(i,32),a}async function Ae(e,t,n,r){const s=typeof r=="string"?await Ke(r,n):await oe(r,n),u=b.encode(e),l=M(t);if(n==="RS256")return crypto.subtle.verify({name:"RSASSA-PKCS1-v1_5"},s,l,u);if(n==="ES256"){const c=Ce(l);return crypto.subtle.verify({name:"ECDSA",hash:"SHA-256"},s,c,u)}throw new Error(`Unsupported alg: ${n}`)}function R(){g={keysByKid:new Map,list:[],parsed:!1};const e=(C.value||"").trim();if(!e){T.textContent="";return}try{const t=JSON.parse(e);if(!t||!Array.isArray(t.keys)){T.textContent='JWKS: expected an object with "keys" array.';return}t.keys.forEach(n=>{g.list.push(n),n.kid&&g.keysByKid.set(n.kid,n)}),g.parsed=!0,T.textContent=`JWKS loaded: ${g.list.length} key(s). ${g.keysByKid.size} with kid.`}catch(t){T.textContent="JWKS parse error: "+t.message}}function Je(e,t){if(!g.parsed||g.list.length===0)return null;if(t&&g.keysByKid.has(t))return g.keysByKid.get(t);if(!t&&g.list.length===1){const r=g.list[0];if(!r.alg||r.alg===e)return r}return g.list.find(r=>!r.alg||r.alg===e)||null}function f(e,t){$.className=e==="ok"?"success-message":"error-message",$.textContent=t,$.classList.remove("hidden")}function se(){$.className="hidden",$.textContent=""}function z(e){ce.textContent=e||""}function K(e,t){try{const n=JSON.parse(e||"{}"),r=JSON.parse(t||"{}"),s=b.encode(JSON.stringify(n)).length,u=b.encode(JSON.stringify(r)).length;j.textContent=`Header size: ${s} bytes (UTF-8)`,D.textContent=`Payload size: ${u} bytes (UTF-8)`;const l=te(JSON.stringify(n)),c=te(JSON.stringify(r)),i=[];l&&i.push("Header contains non-ASCII (UTF-8 required)."),c&&i.push("Payload contains non-ASCII (UTF-8 required)."),z(i.join(" "))}catch{j.textContent="",D.textContent="",z("")}}function Te(e){return e?new Date(e*1e3).toLocaleString():"—"}function $e(e){return e?new Date(e*1e3).toISOString().replace("T"," ").replace("Z"," UTC"):"—"}function He(e){if(!e)return"—";const t=Math.floor(Date.now()/1e3),n=e-t,r=Math.abs(n),s=Math.floor(r/3600),u=Math.floor(r%3600/60),l=r%60,c=s?`${s}h `:"",i=u?`${u}m `:"",a=`${l}s`;return n>=0?`in ${c}${i}${a}`.trim():`${c}${i}${a} ago`.trim()}function w(e){const t=["iat","nbf","exp"];for(const n of t){const r=e&&typeof e[n]=="number"?e[n]:null;U[n].local.textContent=Te(r),U[n].utc.textContent=$e(r),U[n].rel.textContent=He(r)}}function Ne(){return Math.floor(Date.now()/1e3)}function Pe(){const e=parseInt(Z.value,10);return Number.isFinite(e)&&e>=0?e:0}function Le(){return q.value}function ae(e,t){const n=Ne(),r=[];let s=!0;return typeof e.exp=="number"&&n>e.exp+t&&(r.push("Token expired (exp)."),s=!1),typeof e.nbf=="number"&&n<e.nbf-t&&(r.push("Token not yet valid (nbf)."),s=!1),typeof e.iat=="number"&&e.iat>n+t&&(r.push("Issued-at (iat) is in the future."),s=!1),{ok:s,msgs:r}}async function ie(e){e&&(e.preventDefault(),e.stopPropagation());try{const t=(S.value||"").trim();if(K(d.value,p.value),!t){se(),w(null);return}const n=t.split(".");if(![2,3].includes(n.length)||!O(n[0])||!O(n[1]))throw new Error("Invalid JWT structure or base64url segments.");const r=ee(n[0]);d.value=JSON.stringify(r,null,2);const s=ee(n[1]);if(p.value=JSON.stringify(s,null,2),K(d.value,p.value),w(s),n.length===3&&n[2]){if(!O(n[2]))throw new Error("Invalid signature encoding.");E.value=n[2]}else E.value="";const u=Pe(),l=Le(),{ok:c,msgs:i}=ae(s,u);if(n.length===3&&n[2]){const a=r.alg;if(!a){f("err","Missing alg in header.");return}const h=n[0]+"."+n[1];let v=!1;if(a==="HS256"){if(!y.value){f("ok",H("JWT decoded (no HS256 secret provided)",i,l,c));return}v=await Ee(h,n[2],y.value)}else if(a==="RS256"||a==="ES256"){const k=(J.value||"").trim();let A=null,L="";if(k)A=k,L="Public Key (manual)";else{const Y=r.kid,W=Je(a,Y);W&&(A=W,L=W.kid?`JWKS (kid=${W.kid})`:"JWKS (single/fallback)")}if(!A){f("ok",H(`JWT decoded (${a} key not provided)`,i,l,c));return}try{v=await Ae(h,n[2],a,A)}catch(Y){f("err",`Key import failed: ${Y.message}`);return}if(!v){f("err",`Signature invalid (${L}).`);return}const Me=`Signature valid (${a}, ${L})`;if(l==="enforce"&&!c){f("err","Signature valid but claims invalid: "+i.join(" "));return}f(l==="off"||c?"ok":"err",H(Me,i,l,c))}else{f("err",`Unsupported alg="${a}". Only HS256, RS256, ES256 supported.`);return}if(a==="HS256"){if(!v){f("err","Signature invalid.");return}const k="Signature valid (HS256)";if(l==="enforce"&&!c){f("err","Signature valid but claims invalid: "+i.join(" "));return}f(l==="off"||c?"ok":"err",H(k,i,l,c))}}else if(r.alg&&r.alg!=="none")f("err",`Header alg="${r.alg}" but token is unsigned.`);else{const a="Unsigned JWT decoded";l==="enforce"&&!ae(s,u).ok?f("err",a+" but claims invalid."):f("ok",H(a,i,l,c))}}catch(t){f("err","Invalid JWT: "+t.message),d.value="",p.value="",E.value="",w(null)}}function H(e,t,n,r){if(n==="off"||t.length===0)return e;const s=" "+(r?"(claims OK)":"(claims warnings)")+" "+t.join(" ");return n==="warn"?e+s:n==="enforce"?e+(r?" (claims OK)":" (claims invalid) "+t.join(" ")):e}async function We(e){e&&(e.preventDefault(),e.stopPropagation());try{let t=(d.value||"").trim(),n=(p.value||"").trim();if(!t&&!n){f("err","Header and payload cannot both be empty.");return}t||(t='{"alg":"HS256","typ":"JWT"}'),n||(n='{"sub":"1234567890","name":"John Doe","iat":1516239022}');const r=JSON.parse(t),s=JSON.parse(n),u=!!y.value||!!J.value;if(y.value){if(r.alg&&r.alg!=="HS256")throw new Error(`Header alg="${r.alg}" incompatible with HS256 signing. Use "HS256".`);r.alg="HS256"}else r.alg||(r.alg="HS256");const l=x(r),c=x(s);let i="";y.value&&r.alg==="HS256"&&(i=await re(l+"."+c,y.value));const a=l+"."+c+(i?"."+i:"");S.value=a,E.value=i,K(d.value,p.value),w(s),f("ok",i?"JWT encoded and signed (HS256)":"JWT encoded (no signature)")}catch(t){f("err","Encode error: "+t.message)}}function F(e,t={}){if(!e||!e.trim())return t;try{return JSON.parse(e)}catch{return t}}async function je(e){e&&(e.preventDefault(),e.stopPropagation());try{const t=Math.floor(Date.now()/1e3),n=parseInt(pe.value,10)||900,r=ye.value==="yes",s=y.value&&y.value.length>0?y.value:"testsecret",u={sub:fe.value||"demo-user",name:de.value||"Alice Example",exp:t+n};r&&(u.iat=t);const l=F(ge.value,{}),c=Object.assign({},u,l),i={alg:"HS256",typ:"JWT"};d.value=JSON.stringify(i,null,2),p.value=JSON.stringify(c,null,2),K(d.value,p.value),w(c);const a=x(i),h=x(c),v=await re(a+"."+h,s),k=`${a}.${h}.${v}`;S.value=k,E.value=v,V.textContent=s==="testsecret"?'Signed with default secret "testsecret". For stronger tests, enter your own secret above.':"Signed with your HS256 secret.",f("ok","Sample JWT generated and signed (HS256).")}catch(t){f("err","Sample generation failed: "+t.message)}}async function De(e){e&&(e.preventDefault(),e.stopPropagation());try{const t=Se.value;let n;t==="RS256"?n=await crypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:"SHA-256"},!0,["sign","verify"]):n=await crypto.subtle.generateKey({name:"ECDSA",namedCurve:"P-256"},!0,["sign","verify"]),m={alg:t,privateKey:n.privateKey,publicKey:n.publicKey};const r=new Uint8Array(await crypto.subtle.exportKey("spki",n.publicKey)),s=new Uint8Array(await crypto.subtle.exportKey("pkcs8",n.privateKey));I.value=le(r,"PUBLIC KEY"),X.value=le(s,"PRIVATE KEY"),P.disabled=!1,Q.textContent=`Keypair ready (${t}). Use the public key to verify minted tokens.`,f("ok",`Generated ${t} keypair (ephemeral).`)}catch(t){f("err","Keypair generation failed: "+t.message),P.disabled=!0}}function le(e,t){const n=btoa(String.fromCharCode(...e)).match(/.{1,64}/g).join(`
`);return`-----BEGIN ${t}-----
${n}
-----END ${t}-----`}async function Ie(e){e&&(e.preventDefault(),e.stopPropagation());try{if(!m.privateKey||!m.publicKey||!m.alg){f("err","Generate a keypair first.");return}const t=m.alg,n=Math.floor(Date.now()/1e3),r=parseInt(he.value,10)||900,s={alg:t,typ:"JWT",kid:"ephem-1"},u={sub:me.value||"demo-user",name:we.value||"Alice Example",iat:n,exp:n+r};d.value=JSON.stringify(s,null,2),p.value=JSON.stringify(u,null,2),K(d.value,p.value),w(u);const l=x(s),c=x(u),i=b.encode(`${l}.${c}`);let a;if(t==="RS256")a=new Uint8Array(await crypto.subtle.sign({name:"RSASSA-PKCS1-v1_5"},m.privateKey,i));else if(t==="ES256"){const A=new Uint8Array(await crypto.subtle.sign({name:"ECDSA",hash:"SHA-256"},m.privateKey,i));a=xe(A)}else throw new Error(`Unsupported alg for mint: ${t}`);const h=B(a),v=`${l}.${c}.${h}`;S.value=v,E.value=h;const k=await crypto.subtle.exportKey("jwk",m.publicKey);k.kid="ephem-1",Ue(k),J.value=I.value,f("ok",`Minted ${t} token. Auto-added public JWK to JWKS (kid=ephem-1).`)}catch(t){f("err","Mint failed: "+t.message)}}function Ue(e){let t;try{t=C.value.trim()?JSON.parse(C.value):{keys:[]}}catch{t={keys:[]}}Array.isArray(t.keys)||(t.keys=[]);const n=t.keys.findIndex(r=>r.kid&&e.kid&&r.kid===e.kid);n>=0?t.keys[n]=e:t.keys.push(e),C.value=JSON.stringify(t,null,2),R()}function Be(e){e&&(e.preventDefault(),e.stopPropagation()),S.value="",d.value="",p.value="",E.value="",y.value="",J.value="",C.value="",T.textContent="",I.value="",X.value="",m={alg:null,privateKey:null,publicKey:null},g={keysByKid:new Map,list:[],parsed:!1},se(),z(""),w(null),j.textContent="",D.textContent="",V.textContent="",Q.textContent="",P.disabled=!0}o("jwt-forget-secret").addEventListener("click",e=>{e.preventDefault(),y.value=""});let _=!1;["jwt-encode-btn","jwt-decode-btn","jwt-clear-btn","gen-button","kp-generate","kp-mint"].forEach(e=>{const t=document.getElementById(e);t&&t.addEventListener("mousedown",()=>{_=!0})}),y.addEventListener("blur",()=>{if(_){_=!1;return}y.value=""}),o("jwt-decode-btn").addEventListener("click",ie),o("jwt-encode-btn").addEventListener("click",We),o("jwt-clear-btn").addEventListener("click",Be),ve.addEventListener("click",je),ke.addEventListener("click",De),P.addEventListener("click",Ie),C.addEventListener("input",R);let G=null;function N(){ue.value!=="off"&&(G&&clearTimeout(G),G=setTimeout(()=>ie(),250))}S.addEventListener("input",N),d.addEventListener("input",()=>{K(d.value,p.value),w(F(p.value,{}))}),p.addEventListener("input",()=>{K(d.value,p.value),w(F(p.value,{}))}),Z.addEventListener("change",N),q.addEventListener("change",N),J.addEventListener("input",N),y.addEventListener("input",N),typeof window.setupCopyButtons=="function"&&window.setupCopyButtons(),R()}async function ze(o,S){await Oe(o),Re()}export{ze as load,Oe as loadJWTTool,Re as setupJWTTool};
