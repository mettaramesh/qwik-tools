import{a as p}from"./index-BNx_RRWJ.js";window.simpleMD5=p;async function h(t){try{const e=await fetch("hashGenerator.html");if(!e.ok)throw new Error(`Failed to load Hash Generator HTML: ${e.status}`);const o=await e.text();if(o.includes("<!DOCTYPE html")||o.includes("<html"))throw new Error("Invalid HTML content - contains full page structure");t.innerHTML=o}catch(e){console.error("Error loading Hash Generator:",e),t.innerHTML='<div class="error">Failed to load Hash Generator tool</div>';return}}function m(){const t=document.getElementById("hash-input"),e=document.getElementById("md5-output"),o=document.getElementById("sha1-output"),i=document.getElementById("sha256-output"),u=document.getElementById("sha512-output"),c=async()=>{const r=t.value;if(!r)return;const a=new TextEncoder().encode(r);try{const s=await crypto.subtle.digest("SHA-1",a),d=await crypto.subtle.digest("SHA-256",a),l=await crypto.subtle.digest("SHA-512",a);o.value=Array.from(new Uint8Array(s)).map(n=>n.toString(16).padStart(2,"0")).join(""),i.value=Array.from(new Uint8Array(d)).map(n=>n.toString(16).padStart(2,"0")).join(""),u.value=Array.from(new Uint8Array(l)).map(n=>n.toString(16).padStart(2,"0")).join(""),e.value=typeof window.simpleMD5=="function"?window.simpleMD5(r):""}catch(s){console.error("Hash generation failed:",s)}};t&&t.addEventListener("input",c),typeof window.setupCopyButtons=="function"&&window.setupCopyButtons()}function f(t,e){h(t),m()}export{f as load,h as loadHashGenerator,m as setupHashGenerator};
