function g(e){try{return[JSON.parse(e),null]}catch(t){return[null,t.message]}}function O(e){try{const n=new DOMParser().parseFromString(e,"application/xml");return n.getElementsByTagName("parsererror").length?[null,n.getElementsByTagName("parsererror")[0].textContent]:[n,null]}catch(t){return[null,t.message]}}function u(e){return String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}function d(e,t){if(e==null)return`<${t}/>`;if(typeof e!="object")return`<${t}>${u(e)}</${t}>`;let n="",r="",c=!1;for(const s in e)s.startsWith("@")?n+=` ${s.substring(1)}="${u(e[s])}"`:s==="#text"?r+=u(e[s]):s==="#mixed"?(e[s].forEach(o=>{if(typeof o=="string")r+=u(o);else{const a=Object.keys(o)[0];r+=d(o[a],a)}}),c=!0):Array.isArray(e[s])?(e[s].forEach(o=>{typeof o=="object"&&o!==null&&Object.keys(o).length===0?r+=`<${s}/>`:r+=d(o,s)}),c=!0):typeof e[s]=="object"?(r+=d(e[s],s),c=!0):(r+=`<${s}>${u(e[s])}</${s}>`,c=!0);return!c&&!r?`<${t}${n}/>`:`<${t}${n}>${r}</${t}>`}function w(e){const t=Object.keys(e);if(t.length!==1)throw new Error("JSON must have a single root element");const n=t[0];return d(e[n],n)}function h(e){return String(e).replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&apos;/g,"'").replace(/&amp;/g,"&")}function y(e){const t={};if(e.attributes&&e.attributes.length>0)for(let c of e.attributes)t[`@${c.name}`]=h(c.value);const n=[];let r="";for(let c of e.childNodes)if(c.nodeType===3){const s=c.nodeValue.trim();s&&(r+=(r?" ":"")+h(s))}else if(c.nodeType===1){const s=y(c),o=Object.keys(s)[0],a=s[o];t[o]?(Array.isArray(t[o])||(t[o]=[t[o]]),t[o].push(a)):t[o]=a,n.push({[o]:a})}if(r&&n.length>0)t["#mixed"]=[],r&&t["#mixed"].push(r),t["#mixed"].push(...n);else if(r&&n.length===0){if(Object.keys(t).length===0)return{[e.nodeName]:r};t["#text"]=r}return{[e.nodeName]:t}}function v(e){if(e&&typeof e=="object"&&Object.keys(e).length===1&&Object.keys(e)[0]==="root"){const t=e.root;if(t&&typeof t=="object"&&Object.keys(t).length===1&&!Object.keys(t)[0].startsWith("@"))return{[Object.keys(t)[0]]:t[Object.keys(t)[0]]}}return e}function k(e){return e.replace(/^\s*<root>([\s\S]*)<\/root>\s*$/i,"$1").trim()}function m(e){if(Array.isArray(e))return e.map(m).filter(t=>t!==void 0);if(typeof e=="object"&&e!==null){const t={};for(const[n,r]of Object.entries(e)){if(n==="ns1:EmptyNode"||n==="ns2:Note"){t[n]=r&&typeof r=="object"&&Object.keys(r).length===0?{}:m(r);continue}r===""||r===null||typeof r=="object"&&r!==null&&Object.keys(r).length===0||(t[n]=m(r))}return Object.keys(t).length===0?void 0:t}return e}function p(e){if(Array.isArray(e))return e.map(p).filter(t=>t!==void 0);if(typeof e=="object"&&e!==null){const t={};for(const[n,r]of Object.entries(e)){if(n==="ns1:EmptyNode"||n==="ns2:Note"){t[n]=r&&typeof r=="object"&&Object.keys(r).length===0?{}:p(r);continue}r===""||r===null||typeof r=="object"&&r!==null&&Object.keys(r).length===0||(t[n]=p(r))}return Object.keys(t).length===0?void 0:t}return e}async function S(e){try{const t=await fetch("jsonXmlConverter.html");if(!t.ok)throw new Error(`Failed to load JSON-XML converter HTML: ${t.status}`);const n=await t.text();if(console.log("JSON-XML HTML loaded, length:",n.length,"first 100 chars:",n.substring(0,100)),n.includes("<!DOCTYPE html")||n.includes("<html"))throw new Error("Invalid HTML content - contains full page structure");e.innerHTML=n}catch(t){console.error("Error loading JSON-XML converter:",t),e.innerHTML='<div class="error">Failed to load JSON-XML converter tool</div>';return}}async function E(e,t){await S(e),b()}function b(){const e=document.getElementById("json-xml-input"),t=document.getElementById("json-xml-output"),n=document.getElementById("json-xml-status"),r=document.getElementById("to-xml"),c=document.getElementById("to-json"),s=document.getElementById("json-xml-clear-btn");!e||!t||!n||(r.onclick=o=>{o.preventDefault(),o.stopPropagation();const[a,f]=g(e.value);if(f){n.className="error-message",n.textContent="Error: Invalid JSON - "+f,n.classList.remove("hidden"),t.value="",window.showStatus&&window.showStatus(n.textContent,"error");return}try{let l=a;for(;l&&typeof l=="object"&&Object.keys(l).length===1&&Object.keys(l)[0]==="root"&&typeof l.root=="object"&&Object.keys(l.root).length===1&&!Object.keys(l.root)[0].startsWith("@");)l={[Object.keys(l.root)[0]]:l.root[Object.keys(l.root)[0]]};l=m(l);const i=x(w(l));t.value=i,n.className="success-message",n.textContent="Converted JSON to XML.",n.classList.remove("hidden")}catch(l){n.className="error-message",n.textContent="Error: "+l.message,n.classList.remove("hidden"),t.value="",window.showStatus&&window.showStatus(n.textContent,"error")}},c.onclick=o=>{o.preventDefault(),o.stopPropagation();let a=e.value;a=k(a);const[f,l]=O(a);if(l){n.className="error-message",n.textContent="Error: Invalid XML - "+l,n.classList.remove("hidden"),t.value="",window.showStatus&&window.showStatus(n.textContent,"error");return}try{let i=y(f.documentElement);i=v(i),i=p(i),t.value=JSON.stringify(i,null,2),n.className="success-message",n.textContent="Converted XML to JSON.",n.classList.remove("hidden")}catch(i){n.className="error-message",n.textContent="Error: "+i.message,n.classList.remove("hidden"),t.value="",window.showStatus&&window.showStatus(n.textContent,"error")}},s.onclick=o=>{o.preventDefault(),o.stopPropagation(),e.value="",t.value="",n.classList.add("hidden")},typeof window.setupCopyButtons=="function"&&window.setupCopyButtons())}function x(e){const t="  ",n=/(>)(<)(\/*)/g;let r="",c=0;return e=e.replace(n,`$1\r
$2$3`),e.split(/\r?\n/).forEach(s=>{let o=0;s.match(/^<\//)?o=-1:s.match(/^<[^!?]/)&&!s.endsWith("/>")&&(o=1),r+=t.repeat(Math.max(c,0))+s+`
`,c+=o}),r.trim()}export{E as load,S as loadJSONXMLTool,b as setupJSONXmlTool};
