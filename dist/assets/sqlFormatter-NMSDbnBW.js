const k=new Set(["select","from","where","group by","order by","having","limit","offset","insert","into","values","update","set","delete","with","union","except","intersect","create","table","primary key","foreign key","references","alter","drop","add","column","index","view","exists"]),j=new Set(["and","or","on","as","by","into","using","when","then","else"]),L=new Set(["select","from","where","group by","order by","having","limit","offset","insert","update","delete","with","union","except","intersect"]);function S(e){return/\s/.test(e)}function F(e){return/[A-Za-z_@#]/.test(e)}function A(e){return/[A-Za-z0-9_\$@#]/.test(e)}function U(e){const t=[];let n=0;const a=e.length;for(;n<a;){const s=e[n];if(S(s)){let o=n+1;for(;o<a&&S(e[o]);)o++;t.push({type:"space",value:" "}),n=o;continue}if(s==="-"&&e[n+1]==="-"){let o=n+2;for(;o<a&&e[o]!==`
`;)o++;t.push({type:"comment",value:e.slice(n,o)}),n=o;continue}if(s==="/"&&e[n+1]==="*"){let o=n+2;for(;o<a&&!(e[o]==="*"&&e[o+1]==="/");)o++;o=Math.min(o+2,a),t.push({type:"comment",value:e.slice(n,o)}),n=o;continue}if(s==="'"||s==='"'){const o=s;let i=n+1,c=o;for(;i<a;){if(c+=e[i],e[i]===o)if(e[i+1]===o){i+=2,c+=e[i-1]||"";continue}else{i++;break}i++}t.push({type:"string",value:c}),n=i;continue}if(s==="`"||s==="["){const o=s,i=s==="["?"]":"`";let c=n+1,h=o;for(;c<a;){if(h+=e[c],e[c]===i){c++;break}c++}t.push({type:"identifier",value:h}),n=c;continue}if(s==="$"){const o=e.slice(n).match(/^\$[A-Za-z0-9_]*\$/);if(o){const i=o[0];let c=n+i.length,h=e.indexOf(i,c);h===-1&&(h=a);const d=e.slice(n,h+i.length);t.push({type:"string",value:d}),n=h+i.length;continue}}if(s==="("||s===")"||s===","||s===";"){t.push({type:"punct",value:s}),n++;continue}if(["=","+","-","*","/","%","<",">","!","|","&","^","~"].includes(s)){let o=n+1;for(;o<a&&/[=<>]/.test(e[o]);)o++;t.push({type:"op",value:e.slice(n,o)}),n=o;continue}if(F(s)||/[0-9]/.test(s)){let o=n;for(;o<a&&(A(e[o])||e[o]===".");)o++;const i=e.slice(n,o);t.push({type:"word",value:i}),n=o;continue}t.push({type:"char",value:s}),n++}return t}function E(e,t={}){if(!e||!e.trim())return"";e=e.replace(/\r\n/g,`
`).replace(/\r/g,`
`);const n=U(e),a=[];let s=0;const o="  ";let i=0,c=null,h=!1;function d(){if(a.length===0){a.push(`
`),h=!1;return}a[a.length-1].endsWith(`
`)||(a.push(`
`),h=!1)}function f(){let r="";for(let w=0;w<s;w++)r+=o;a.push(r),h=!0}function p(r){a.push(r),h=!0}function v(){if(!(a.length?a[a.length-1]:"")){a.push("");return}const w=a.join("").slice(-1);w!==" "&&w!==`
`&&a.push(" ")}function g(r){d(),f(),p(r.toUpperCase()),c=r.toLowerCase(),h=!0}for(;i<n.length;){const r=n[i];if(r.type==="space"){i++;continue}if(r.type==="comment"){d(),f(),p(r.value.trim()),d(),i++;continue}(u=>{const y=[];let m=u;for(;m<n.length&&y.length<3;){if(n[m].type==="space"){m++;continue}if(n[m].type==="word")y.push(n[m].value.toLowerCase()),m++;else break}return y.join(" ")})(i);let b=null;for(const u of[3,2,1]){const y=[];let m=i;for(;m<n.length&&y.length<u;){if(n[m].type==="space"){m++;continue}if(n[m].type==="word")y.push(n[m].value.toLowerCase()),m++;else break}if(!y.length)continue;const C=y.join(" ");if(L.has(C)||k.has(C)){b=C;break}}if(b){if(["union","except","intersect"].includes(b)){d(),f(),p(b.toUpperCase()),d(),i+=b.split(" ").length,c=b;continue}g(b);let u=b.split(" ").length,y=0;for(;y<u&&i<n.length;){if(n[i].type==="space"){i++;continue}i++,y++}b.toLowerCase();continue}if(r.type==="punct"&&r.value==="("){v(),p("("),s++,i++;continue}if(r.type==="punct"&&r.value===")"){s=Math.max(0,s-1),d(),f(),p(")"),i++;continue}if(r.type==="punct"&&r.value===","){p(","),["select","group by","order by","values","set"].includes(c)?(d(),f(),c==="select"&&f()):v(),i++;continue}if(r.type==="punct"&&r.value===";"){p(";"),d(),i++;continue}if(r.type==="string"||r.type==="identifier"){v(),p(r.value),i++;continue}if(r.type==="op"||r.type==="char"){v(),p(r.value),i++;continue}if(r.type==="word"){const u=r.value.toLowerCase();if(u==="case"){d(),f(),p("CASE"),s++,c="case",i++;continue}if(u==="when"||u==="then"){d(),f(),f(),p(r.value.toUpperCase()),i++;continue}if(u==="else"){d(),f(),p("ELSE"),i++;continue}if(u==="end"){s=Math.max(0,s-1),d(),f(),p("END"),i++;continue}if(u==="join"||u.endsWith("join")){d(),f(),p(r.value.toUpperCase()),c="join",i++;continue}if(u==="on"){d(),f(),p("ON"),v(),i++;continue}if(u==="and"||u==="or"){d(),f(),p(u.toUpperCase()),v(),i++;continue}if(L.has(u)){g(u),c=u,i++;continue}const y=r.value.toUpperCase();if((j.has(u)||k.has(u)||/^[A-Za-z]+$/.test(r.value)&&/[^a-z]/i.test(y)===!1)&&(k.has(u)||j.has(u)||L.has(u)||["select","from","where","group","order","having","limit","offset","insert","update","delete"].includes(u))){h?v():f(),p(y),c=u,i++;continue}h?v():f(),p(r.value),i++;continue}v(),p(r.value),i++}return a.join("").split(`
`).map(r=>r.replace(/[ \t]+$/,"")).join(`
`).replace(/^\n+/,"").replace(/\n+$/,"")}function M(e){if(!e)return"";let t=0,n=e.length,a="";for(;t<n;){if(e[t]==="'"||e[t]==='"'){const s=e[t];for(a+=s,t++;t<n;){if(a+=e[t],e[t]===s)if(e[t+1]===s){t+=2,a+=e[t-1]||"";continue}else{t++;break}t++}continue}if(e[t]==="-"&&e[t+1]==="-"){for(;t<n&&e[t]!==`
`;)t++;continue}if(e[t]==="/"&&e[t+1]==="*"){for(t+=2;t<n&&!(e[t]==="*"&&e[t+1]==="/");)t++;t+=2;continue}if(S(e[t])){for(a+=" ";t<n&&S(e[t]);)t++;continue}a+=e[t],t++}return a.trim().replace(/\s*,\s*/g,", ").replace(/\s*\(\s*/g,"(").replace(/\s*\)\s*/g,")")}function z(e){e.innerHTML=`
    <div class="tool-header"><h2>SQL Formatter</h2><p class="small">Format, beautify, or minify SQL queries â€” robust tokenizer & formatter.</p></div>
    <div class="card">
      <div style="display:flex;gap:8px;flex-wrap:wrap;margin-bottom:12px;">
        <button class="btn btn--secondary" id="sql-format-btn">Format</button>
        <button class="btn btn--outline" id="sql-minify-btn">Minify</button>
        <button class="btn btn--outline" id="sql-clear-btn">Clear</button>
        <label style="display:flex;align-items:center;gap:8px;margin-left:auto;font-size:.9rem;">
          <input type="checkbox" id="preserve-case" /> Preserve case (don't uppercase keywords)
        </label>
      </div>

      <div style="display:flex;gap:12px;flex-wrap:wrap;">
        <div style="flex:1;min-width:260px;">
          <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:6px;">
            <label class="form-label">Input SQL</label>
            <button class="btn btn--sm copy-btn" data-target="sql-input">Copy</button>
          </div>
          <textarea id="sql-input" class="form-control code-input" placeholder="Paste or type your SQL here..." rows="12" style="font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, 'Roboto Mono', monospace;"></textarea>
        </div>
        <div style="flex:1;min-width:260px;">
          <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:6px;">
            <label class="form-label">Formatted Output</label>
            <button class="btn btn--sm copy-btn" data-target="sql-output">Copy</button>
          </div>
          <textarea id="sql-output" class="form-control code-input" readonly rows="12" style="font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, 'Roboto Mono', monospace;"></textarea>
        </div>
      </div>

      <div id="sql-error" class="error-message hidden" style="margin-top:10px;"></div>
    </div>
  `}function K(e){if(!e||typeof e.querySelector!="function")throw new Error("SQL Formatter setup: container argument is required and must be a DOM element.");const t=e,n=t.querySelector("#sql-input"),a=t.querySelector("#sql-output"),s=t.querySelector("#sql-format-btn"),o=t.querySelector("#sql-minify-btn"),i=t.querySelector("#sql-clear-btn"),c=t.querySelector("#sql-error"),h=t.querySelectorAll(".copy-btn"),d=t.querySelector("#preserve-case"),f=document.createElement("span");f.className="small muted",f.style.marginLeft="12px",a.parentElement.appendChild(f);function p(l,x=!0,r=2200){f.textContent=l||"",f.style.color=x?"var(--color-success,#21808d)":"var(--color-error,#c0392b)",r&&l&&setTimeout(()=>{f.textContent===l&&(f.textContent="")},r)}function v(l){c.textContent=l,c.classList.remove("hidden")}function g(){c&&(c.textContent="",c.classList.add("hidden"))}s.addEventListener("click",()=>{g();try{let l=E(n.value||"");d.checked||(l=l.replace(/\b(select|from|where|group by|order by|having|limit|offset|insert|into|values|update|set|delete|with|union|except|intersect|join|left join|right join|inner join|outer join|on|as|and|or|case|when|then|else|end|in|is|null|not|create|table|primary key|foreign key|references|alter|drop|add|column|index|view|exists|between|like|desc|asc|cast|coalesce|with|recursive)\b/gi,x=>x.toUpperCase())),a.value=l,p("Formatted",!0)}catch(l){v("Formatting error: "+(l&&l.message?l.message:String(l)))}}),o.addEventListener("click",()=>{g();try{const l=M(n.value||"");a.value=l,p("Minified",!0)}catch(l){v("Minify error: "+(l&&l.message?l.message:String(l)))}}),i.addEventListener("click",()=>{n.value="",a.value="",g(),p("Cleared",!0)}),h.forEach(l=>{l.addEventListener("click",async x=>{const r=l.getAttribute("data-target"),w=t.querySelector(`#${r}`);if(w)try{await navigator.clipboard.writeText(w.value),p("Copied!",!0)}catch{p("Copy failed.",!1)}})}),t.addEventListener("keydown",l=>{(navigator.platform.toLowerCase().includes("mac")?l.metaKey:l.ctrlKey)&&(l.shiftKey&&l.key.toLowerCase()==="f"?(l.preventDefault(),s.click()):l.shiftKey&&l.key.toLowerCase()==="m"&&(l.preventDefault(),o.click()))}),n.addEventListener("focus",()=>n.select())}const Q={load:z,setup:K,formatSQL:E,minifySQL:M};export{Q as default,z as load,K as setup};
