import{s as g}from"./utils-DuYpMu2P.js";function w(e){try{return[JSON.parse(e),null]}catch(t){return[null,t.message]}}function O(e){try{const n=new DOMParser().parseFromString(e,"application/xml");return n.getElementsByTagName("parsererror").length?[null,n.getElementsByTagName("parsererror")[0].textContent]:[n,null]}catch(t){return[null,t.message]}}function u(e){return String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}function m(e,t){if(e==null)return`<${t}/>`;if(typeof e!="object")return`<${t}>${u(e)}</${t}>`;let n="",r="",c=!1;for(const o in e)o.startsWith("@")?n+=` ${o.substring(1)}="${u(e[o])}"`:o==="#text"?r+=u(e[o]):o==="#mixed"?(e[o].forEach(s=>{if(typeof s=="string")r+=u(s);else{const a=Object.keys(s)[0];r+=m(s[a],a)}}),c=!0):Array.isArray(e[o])?(e[o].forEach(s=>{typeof s=="object"&&s!==null&&Object.keys(s).length===0?r+=`<${o}/>`:r+=m(s,o)}),c=!0):typeof e[o]=="object"?(r+=m(e[o],o),c=!0):(r+=`<${o}>${u(e[o])}</${o}>`,c=!0);return!c&&!r?`<${t}${n}/>`:`<${t}${n}>${r}</${t}>`}function k(e){const t=Object.keys(e);if(t.length!==1)throw new Error("JSON must have a single root element");const n=t[0];return m(e[n],n)}function d(e){return String(e).replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&apos;/g,"'").replace(/&amp;/g,"&")}function h(e){const t={};if(e.attributes&&e.attributes.length>0)for(let c of e.attributes)t[`@${c.name}`]=d(c.value);const n=[];let r="";for(let c of e.childNodes)if(c.nodeType===3){const o=c.nodeValue.trim();o&&(r+=(r?" ":"")+d(o))}else if(c.nodeType===1){const o=h(c),s=Object.keys(o)[0],a=o[s];t[s]?(Array.isArray(t[s])||(t[s]=[t[s]]),t[s].push(a)):t[s]=a,n.push({[s]:a})}if(r&&n.length>0)t["#mixed"]=[],r&&t["#mixed"].push(r),t["#mixed"].push(...n);else if(r&&n.length===0){if(Object.keys(t).length===0)return{[e.nodeName]:r};t["#text"]=r}return{[e.nodeName]:t}}function v(e){if(e&&typeof e=="object"&&Object.keys(e).length===1&&Object.keys(e)[0]==="root"){const t=e.root;if(t&&typeof t=="object"&&Object.keys(t).length===1&&!Object.keys(t)[0].startsWith("@"))return{[Object.keys(t)[0]]:t[Object.keys(t)[0]]}}return e}function x(e){return e.replace(/^\s*<root>([\s\S]*)<\/root>\s*$/i,"$1").trim()}function p(e){if(Array.isArray(e))return e.map(p).filter(t=>t!==void 0);if(typeof e=="object"&&e!==null){const t={};for(const[n,r]of Object.entries(e)){if(n==="ns1:EmptyNode"||n==="ns2:Note"){t[n]=r&&typeof r=="object"&&Object.keys(r).length===0?{}:p(r);continue}r===""||r===null||typeof r=="object"&&r!==null&&Object.keys(r).length===0||(t[n]=p(r))}return Object.keys(t).length===0?void 0:t}return e}function y(e){if(Array.isArray(e))return e.map(y).filter(t=>t!==void 0);if(typeof e=="object"&&e!==null){const t={};for(const[n,r]of Object.entries(e)){if(n==="ns1:EmptyNode"||n==="ns2:Note"){t[n]=r&&typeof r=="object"&&Object.keys(r).length===0?{}:y(r);continue}r===""||r===null||typeof r=="object"&&r!==null&&Object.keys(r).length===0||(t[n]=y(r))}return Object.keys(t).length===0?void 0:t}return e}async function $(e){const n=await(await fetch("jsonXmlConverter.html")).text();e.innerHTML=n,g(),b()}function b(){const e=document.getElementById("json-xml-input"),t=document.getElementById("json-xml-output"),n=document.getElementById("json-xml-status"),r=document.getElementById("to-xml"),c=document.getElementById("to-json"),o=document.getElementById("json-xml-clear-btn");!e||!t||!n||(r.onclick=s=>{s.preventDefault(),s.stopPropagation();const[a,f]=w(e.value);if(f){n.className="error-message",n.textContent="Error: Invalid JSON - "+f,n.classList.remove("hidden"),t.value="",window.showStatus&&window.showStatus(n.textContent,"error");return}try{let l=a;for(;l&&typeof l=="object"&&Object.keys(l).length===1&&Object.keys(l)[0]==="root"&&typeof l.root=="object"&&Object.keys(l.root).length===1&&!Object.keys(l.root)[0].startsWith("@");)l={[Object.keys(l.root)[0]]:l.root[Object.keys(l.root)[0]]};l=p(l);const i=j(k(l));t.value=i,n.className="success-message",n.textContent="Converted JSON to XML.",n.classList.remove("hidden")}catch(l){n.className="error-message",n.textContent="Error: "+l.message,n.classList.remove("hidden"),t.value="",window.showStatus&&window.showStatus(n.textContent,"error")}},c.onclick=s=>{s.preventDefault(),s.stopPropagation();let a=e.value;a=x(a);const[f,l]=O(a);if(l){n.className="error-message",n.textContent="Error: Invalid XML - "+l,n.classList.remove("hidden"),t.value="",window.showStatus&&window.showStatus(n.textContent,"error");return}try{let i=h(f.documentElement);i=v(i),i=y(i),t.value=JSON.stringify(i,null,2),n.className="success-message",n.textContent="Converted XML to JSON.",n.classList.remove("hidden")}catch(i){n.className="error-message",n.textContent="Error: "+i.message,n.classList.remove("hidden"),t.value="",window.showStatus&&window.showStatus(n.textContent,"error")}},o.onclick=s=>{s.preventDefault(),s.stopPropagation(),e.value="",t.value="",n.classList.add("hidden")},typeof window.setupCopyButtons=="function"&&window.setupCopyButtons())}function j(e){const t="  ",n=/(>)(<)(\/*)/g;let r="",c=0;return e=e.replace(n,`$1\r
$2$3`),e.split(/\r?\n/).forEach(o=>{let s=0;o.match(/^<\//)?s=-1:o.match(/^<[^!?]/)&&!o.endsWith("/>")&&(s=1),r+=t.repeat(Math.max(c,0))+o+`
`,c+=s}),r.trim()}export{$ as load,b as setupJSONXmlTool};
