import{s as f}from"./utils-DuYpMu2P.js";function m(a,u){function o(r,e,n=""){if(e.type){if(e.type==="object"&&typeof r!="object")return`${n} should be object`;if(e.type==="array"&&!Array.isArray(r))return`${n} should be array`;if(e.type==="string"&&typeof r!="string")return`${n} should be string`;if(e.type==="number"&&typeof r!="number")return`${n} should be number`;if(e.type==="boolean"&&typeof r!="boolean")return`${n} should be boolean`}if(e.required&&Array.isArray(e.required)){for(const t of e.required)if(r==null||!(t in r))return`${n}.${t} is required`}if(e.properties&&typeof e.properties=="object"){for(const t in e.properties)if(r&&t in r){const i=o(r[t],e.properties[t],n?n+"."+t:t);if(i)return i}}if(e.items&&Array.isArray(r))for(let t=0;t<r.length;t++){const i=o(r[t],e.items,n+"["+t+"]");if(i)return i}return null}return o(a,u,"")}async function v(a){const o=await(await fetch("jsonValidator.html")).text();a.innerHTML=o,y()}function y(){const a=document.getElementById("json-validator-input"),u=document.getElementById("json-validator-schema"),o=document.getElementById("json-validator-output"),r=document.getElementById("json-validate-btn"),e=document.getElementById("json-clear-btn"),n=document.getElementById("json-validator-error");function t(l){n.textContent=l,n.classList.remove("hidden")}function i(){n.textContent="",n.classList.add("hidden")}r.onclick=()=>{i();let l,d;try{l=JSON.parse(a.value)}catch(s){t("Invalid JSON: "+s.message),o.value="";return}try{d=JSON.parse(u.value)}catch(s){t("Invalid JSON Schema: "+s.message),o.value="";return}const c=m(l,d);c?o.value="Validation failed: "+c:o.value="JSON is valid against the schema."},e.onclick=()=>{a.value="",u.value="",o.value="",i()},f()}export{v as load};
